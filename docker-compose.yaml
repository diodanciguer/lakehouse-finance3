services:
  postgres3:
    image: postgres:16
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis3:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  airflow3-init:
    image: apache/airflow:3.0.6
    depends_on:
      - postgres3
      - redis3
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: apache-airflow-providers-fab
    user: "0:0"
    command: >
      bash -lc "
      airflow db migrate &&
      airflow fab create-admin
        --username \"$AIRFLOW_ADMIN_USERNAME\"
        --firstname Diego
        --lastname Admin
        --email \"$AIRFLOW_ADMIN_EMAIL\"
        --password \"$AIRFLOW_ADMIN_PASSWORD\"
        --role Admin || true
      "
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    restart: "no"

  airflow3-scheduler:
    image: apache/airflow:3.0.6
    depends_on:
      - postgres3
      - redis3
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: apache-airflow-providers-fab
    command: ["airflow", "scheduler"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    restart: unless-stopped

  airflow3-triggerer:
    image: apache/airflow:3.0.6
    depends_on:
      - postgres3
      - redis3
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: apache-airflow-providers-fab
    command: ["airflow", "triggerer"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    restart: unless-stopped

  airflow3-dag-processor:
    image: apache/airflow:3.0.6
    depends_on:
      - postgres3
      - redis3
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: apache-airflow-providers-fab
    command: ["airflow", "dag-processor"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    restart: unless-stopped

  airflow3-worker:
    image: apache/airflow:3.0.6
    depends_on:
      - postgres3
      - redis3
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: apache-airflow-providers-fab
    command: ["airflow", "celery", "worker"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    restart: unless-stopped

  airflow3-webserver:
    image: apache/airflow:3.0.6
    depends_on:
      - postgres3
      - redis3
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: apache-airflow-providers-fab
    # Airflow 3: web UI agora Ã© servida pelo `api-server`
    command: ["airflow", "api-server", "--port", "8080"]
    ports:
      - "38083:8080"   # UI do Airflow 3 (HOST:CONTAINER)
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    restart: unless-stopped

  flower3:
    image: apache/airflow:3.0.6
    depends_on:
      - redis3
    env_file: .env
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: apache-airflow-providers-fab
    command: ["airflow", "celery", "flower", "--port", "5555"]
    ports:
      - "35555:5555"   # Flower (HOST:CONTAINER)
    restart: unless-stopped